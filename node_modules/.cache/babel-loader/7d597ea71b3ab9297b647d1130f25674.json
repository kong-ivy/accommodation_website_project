{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaoyan/Desktop/orange/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      airconditioner: false,\n      carpark: false,\n      wifi: false,\n      gym: false,\n      pets: false,\n      breakfast: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterarooms);\n    };\n\n    this.filterarooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        airconditioner,\n        carpark,\n        wifi,\n        gym,\n        pets,\n        breakfast\n      } = this.state; //all the rooms\n\n      let temRooms = [...rooms]; //transform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== 'all') {\n        temRooms = temRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        temRooms = temRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      temRooms = temRooms.filter(room => room.price <= price); //filter by extras\n\n      if (airconditioner) {\n        temRooms = temRooms.filter(room => room.airconditioner === true);\n      }\n\n      if (carpark) {\n        temRooms = temRooms.filter(room => room.carpark === true);\n      }\n\n      if (wifi) {\n        temRooms = temRooms.filter(room => room.wifi === true);\n      }\n\n      if (gym) {\n        temRooms = temRooms.filter(room => room.gym === true);\n      }\n\n      if (pets) {\n        temRooms = temRooms.filter(room => room.pets === true);\n      }\n\n      if (breakfast) {\n        temRooms = temRooms.filter(room => room.breakfast === true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: temRooms\n      });\n    };\n  }\n\n  //getdata\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withroomconsumer(Component) {\n  return function Consumerwrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/liuxiaoyan/Desktop/orange/src/Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","airconditioner","carpark","wifi","gym","pets","breakfast","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterarooms","temRooms","parseInt","filter","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withroomconsumer","Consumerwrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n\nconst RoomContext =React.createContext();\n\nclass RoomProvider extends Component {\n    state={\n        rooms:[],\n        sortedRooms:[],\n        featuredRooms:[],\n        loading: true,\n        type:'all',\n        capacity:1,\n        price:0,\n        minPrice:0,\n        maxPrice:0,\n        airconditioner:false,\n        carpark:false,\n        wifi:false,\n        gym:false,\n        pets:false,\n        breakfast:false\n    };\n    //getdata\n    componentDidMount() {\n        let rooms =this.formatData(items);\n        let featuredRooms=rooms.filter(room => room.featured === true);\n        let maxPrice=Math.max(...rooms.map(item=>item.price));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms:rooms,\n            loading:false,\n            price:maxPrice,\n            maxPrice\n\n        });\n    }\n    formatData(items){\n        let tempItems = items.map(item =>{\n            let id = item.sys.id;\n            let images = item.fields.images.map(image => image.fields.file.url);\n            let room={...item.fields,images,id};\n            return room;\n        });\n        return tempItems;\n    }\n    getRoom= (slug) =>{\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find((room)=>room.slug === slug);\n        return room;\n    };\n\n    handleChange = event => {\n        const target=event.target\n        const value=event.type === 'checkbox' ? \n        target.checked:target.value\n        const name=event.target.name;\n        this.setState({\n            [name]:value\n        },this.filterarooms)\n        \n    };\n    filterarooms= () => {\n        let{\n            rooms,type,capacity,price,airconditioner,\n            carpark,wifi,gym,pets,breakfast\n        } =this.state;\n    \n//all the rooms\nlet temRooms=[...rooms];\n//transform values\ncapacity = parseInt(capacity)\nprice=parseInt(price)\n//filter by type\nif(type !== 'all'){\n    temRooms=temRooms.filter(room =>room.type ===type)\n}\n//filter by capacity\nif(capacity!==1){\n    temRooms=temRooms.filter(room=>room.capacity >=capacity)\n}\n\n//filter by price\ntemRooms=temRooms.filter(room=>room.price <=price);\n\n//filter by extras\nif(airconditioner){\n    temRooms=temRooms.filter(room=>room.airconditioner===true)\n}\nif(carpark){\n    temRooms=temRooms.filter(room=>room.carpark===true)\n}\nif(wifi){\n    temRooms=temRooms.filter(room=>room.wifi===true)\n}\nif(gym){\n    temRooms=temRooms.filter(room=>room.gym===true)\n}\nif(pets){\n    temRooms=temRooms.filter(room=>room.pets===true)\n}\nif(breakfast){\n    temRooms=temRooms.filter(room=>room.breakfast===true)\n}\n\n\n\n//change state\nthis.setState({\n    sortedRooms:temRooms\n})\n};\n\n\n    render() {\n        return (\n            <RoomContext.Provider \n            value={{...this.state,getRoom:this.getRoom,\n            handleChange:this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        );\n    }\n}\n\nconst RoomConsumer =RoomContext.Consumer;\n\nexport function withroomconsumer(Component){\n    return function Consumerwrapper(props){\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider,RoomConsumer,RoomContext};"]},"metadata":{},"sourceType":"module"}