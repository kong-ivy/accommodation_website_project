{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaoyan/Desktop/orange/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterarooms);\n    };\n\n    this.filterarooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        airconditioner,\n        carpark,\n        wifi,\n        gym,\n        pets,\n        breakfast,\n        kitchen\n      } = this.state; //all the rooms\n\n      let temRooms = [...rooms]; //transform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== 'all') {\n        temRooms = temRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        temRooms = temRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      temRooms = temRooms.filter(room => room.price <= price); //filter by extras\n\n      if (airconditioner) {\n        temRooms = temRooms.filter(room => room.airconditioner === true);\n      }\n\n      if (carpark) {\n        temRooms = temRooms.filter(room => room.carpark === true);\n      }\n\n      if (wifi) {\n        temRooms = temRooms.filter(room => room.wifi === true);\n      }\n\n      if (gym) {\n        temRooms = temRooms.filter(room => room.gym === true);\n      }\n\n      if (pets) {\n        temRooms = temRooms.filter(room => room.pets === true);\n      }\n\n      if (breakfast) {\n        temRooms = temRooms.filter(room => room.breakfast === true);\n      }\n\n      if (kitchen) {\n        temRooms = temRooms.filter(room => room.kitchen === true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: temRooms\n      });\n    };\n\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      airconditioner: false,\n      carpark: false,\n      wifi: false,\n      gym: false,\n      pets: false,\n      breakfast: false,\n      kitchen: false\n    };\n  } //getdata\n\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withroomconsumer(Component) {\n  return function Consumerwrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/liuxiaoyan/Desktop/orange/src/Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","constructor","props","getRoom","slug","tempRooms","state","rooms","room","find","handleChange","event","target","value","type","checked","name","setState","filterarooms","capacity","price","airconditioner","carpark","wifi","gym","pets","breakfast","kitchen","temRooms","parseInt","filter","sortedRooms","featuredRooms","loading","minPrice","maxPrice","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","children","RoomConsumer","Consumer","withroomconsumer","Consumerwrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,MAAMC,WAAW,GAAEH,KAAK,CAACI,aAAN,EAAnB;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA8ClBC,OA9CkB,GA8CRC,IAAD,IAAS;AACd,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAhB;AACA,YAAMC,IAAI,GAAGH,SAAS,CAACI,IAAV,CAAgBD,IAAD,IAAQA,IAAI,CAACJ,IAAL,KAAcA,IAArC,CAAb;AACA,aAAOI,IAAP;AACH,KAlDiB;;AAAA,SAoDlBE,YApDkB,GAoDHC,KAAK,IAAI;AACpB,YAAMC,MAAM,GAACD,KAAK,CAACC,MAAnB;AACA,YAAMC,KAAK,GAACF,KAAK,CAACG,IAAN,KAAe,UAAf,GACZF,MAAM,CAACG,OADK,GACGH,MAAM,CAACC,KADtB;AAEA,YAAMG,IAAI,GAACL,KAAK,CAACC,MAAN,CAAaI,IAAxB;AACA,WAAKC,QAAL,CAAc;AACV,SAACD,IAAD,GAAOH;AADG,OAAd,EAEE,KAAKK,YAFP;AAIH,KA7DiB;;AAAA,SA8DlBA,YA9DkB,GA8DJ,MAAM;AAChB,UAAG;AACCX,QAAAA,KADD;AACOO,QAAAA,IADP;AACYK,QAAAA,QADZ;AACqBC,QAAAA,KADrB;AAC2BC,QAAAA,cAD3B;AAECC,QAAAA,OAFD;AAESC,QAAAA,IAFT;AAEcC,QAAAA,GAFd;AAEkBC,QAAAA,IAFlB;AAEuBC,QAAAA,SAFvB;AAEiCC,QAAAA;AAFjC,UAGA,KAAKrB,KAHR,CADgB,CAMxB;;AACA,UAAIsB,QAAQ,GAAC,CAAC,GAAGrB,KAAJ,CAAb,CAPwB,CAQxB;;AACAY,MAAAA,QAAQ,GAAGU,QAAQ,CAACV,QAAD,CAAnB;AACAC,MAAAA,KAAK,GAACS,QAAQ,CAACT,KAAD,CAAd,CAVwB,CAWxB;;AACA,UAAGN,IAAI,KAAK,KAAZ,EAAkB;AACdc,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAGA,IAAI,CAACM,IAAL,KAAaA,IAApC,CAAT;AACH,OAduB,CAexB;;;AACA,UAAGK,QAAQ,KAAG,CAAd,EAAgB;AACZS,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACW,QAAL,IAAgBA,QAAtC,CAAT;AACH,OAlBuB,CAoBxB;;;AACAS,MAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACY,KAAL,IAAaA,KAAnC,CAAT,CArBwB,CAuBxB;;AACA,UAAGC,cAAH,EAAkB;AACdO,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACa,cAAL,KAAsB,IAA5C,CAAT;AACH;;AACD,UAAGC,OAAH,EAAW;AACPM,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACc,OAAL,KAAe,IAArC,CAAT;AACH;;AACD,UAAGC,IAAH,EAAQ;AACJK,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACe,IAAL,KAAY,IAAlC,CAAT;AACH;;AACD,UAAGC,GAAH,EAAO;AACHI,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACgB,GAAL,KAAW,IAAjC,CAAT;AACH;;AACD,UAAGC,IAAH,EAAQ;AACJG,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACiB,IAAL,KAAY,IAAlC,CAAT;AACH;;AACD,UAAGC,SAAH,EAAa;AACTE,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACkB,SAAL,KAAiB,IAAvC,CAAT;AACH;;AACD,UAAGC,OAAH,EAAW;AACPC,QAAAA,QAAQ,GAACA,QAAQ,CAACE,MAAT,CAAgBtB,IAAI,IAAEA,IAAI,CAACmB,OAAL,KAAe,IAArC,CAAT;AACH,OA5CuB,CAgDxB;;;AACA,WAAKV,QAAL,CAAc;AACVc,QAAAA,WAAW,EAACH;AADF,OAAd;AAGC,KAlHqB;;AAEd,SAAKtB,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,EADG;AAETwB,MAAAA,WAAW,EAAC,EAFH;AAGTC,MAAAA,aAAa,EAAC,EAHL;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTnB,MAAAA,IAAI,EAAC,KALI;AAMTK,MAAAA,QAAQ,EAAC,CANA;AAOTC,MAAAA,KAAK,EAAC,CAPG;AAQTc,MAAAA,QAAQ,EAAC,CARA;AASTC,MAAAA,QAAQ,EAAC,CATA;AAUTd,MAAAA,cAAc,EAAC,KAVN;AAWTC,MAAAA,OAAO,EAAC,KAXC;AAYTC,MAAAA,IAAI,EAAC,KAZI;AAaTC,MAAAA,GAAG,EAAC,KAbK;AAcTC,MAAAA,IAAI,EAAC,KAdI;AAeTC,MAAAA,SAAS,EAAC,KAfD;AAgBTC,MAAAA,OAAO,EAAC;AAhBC,KAAb;AAmBH,GAtBgC,CAuBjC;;;AACAS,EAAAA,iBAAiB,GAAG;AAChB,QAAI7B,KAAK,GAAE,KAAK8B,UAAL,CAAgBxC,KAAhB,CAAX;AACA,QAAImC,aAAa,GAACzB,KAAK,CAACuB,MAAN,CAAatB,IAAI,IAAIA,IAAI,CAAC8B,QAAL,KAAkB,IAAvC,CAAlB;AACA,QAAIH,QAAQ,GAACI,IAAI,CAACC,GAAL,CAAS,GAAGjC,KAAK,CAACkC,GAAN,CAAUC,IAAI,IAAEA,IAAI,CAACtB,KAArB,CAAZ,CAAb;AACA,SAAKH,QAAL,CAAc;AACVV,MAAAA,KADU;AAEVyB,MAAAA,aAFU;AAGVD,MAAAA,WAAW,EAACxB,KAHF;AAIV0B,MAAAA,OAAO,EAAC,KAJE;AAKVb,MAAAA,KAAK,EAACe,QALI;AAMVA,MAAAA;AANU,KAAd;AASH;;AACDE,EAAAA,UAAU,CAACxC,KAAD,EAAO;AACb,QAAI8C,SAAS,GAAG9C,KAAK,CAAC4C,GAAN,CAAUC,IAAI,IAAG;AAC7B,UAAIE,EAAE,GAAGF,IAAI,CAACG,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGJ,IAAI,CAACK,MAAL,CAAYD,MAAZ,CAAmBL,GAAnB,CAAuBO,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;AACA,UAAI1C,IAAI,GAAC,EAAC,GAAGkC,IAAI,CAACK,MAAT;AAAgBD,QAAAA,MAAhB;AAAuBF,QAAAA;AAAvB,OAAT;AACA,aAAOpC,IAAP;AACH,KALe,CAAhB;AAMA,WAAOmC,SAAP;AACH;;AAsEDQ,EAAAA,MAAM,GAAG;AACL,WAEI,oBAAC,WAAD,CAAa,QAAb;AACA,MAAA,KAAK,EAAE,EAAC,GAAG,KAAK7C,KAAT;AAAeH,QAAAA,OAAO,EAAC,KAAKA,OAA5B;AACPO,QAAAA,YAAY,EAAC,KAAKA;AADX,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKR,KAAL,CAAWkD,QAHhB,CAFJ;AAUH;;AA/HgC;;AAkIrC,MAAMC,YAAY,GAAEvD,WAAW,CAACwD,QAAhC;AAEA,OAAO,SAASC,gBAAT,CAA0B3D,SAA1B,EAAoC;AACvC,SAAO,SAAS4D,eAAT,CAAyBtD,KAAzB,EAA+B;AAClC,WAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFW,KAAK,IAAI,oBAAC,SAAD,oBAAeX,KAAf;AAAsB,MAAA,OAAO,EAAEW,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADP,CAAP;AAGH,GAJD;AAKH;AAED,SAAQb,YAAR,EAAqBqD,YAArB,EAAkCvD,WAAlC","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n\nconst RoomContext =React.createContext();\nclass RoomProvider extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            rooms:[],\n            sortedRooms:[],\n            featuredRooms:[],\n            loading: true,\n            type:'all',\n            capacity:1,\n            price:0,\n            minPrice:0,\n            maxPrice:0,\n            airconditioner:false,\n            carpark:false,\n            wifi:false,\n            gym:false,\n            pets:false,\n            breakfast:false,\n            kitchen:false\n        }\n        \n    }\n    //getdata\n    componentDidMount() {\n        let rooms =this.formatData(items);\n        let featuredRooms=rooms.filter(room => room.featured === true);\n        let maxPrice=Math.max(...rooms.map(item=>item.price));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms:rooms,\n            loading:false,\n            price:maxPrice,\n            maxPrice\n        });\n        \n    }\n    formatData(items){\n        let tempItems = items.map(item =>{\n            let id = item.sys.id;\n            let images = item.fields.images.map(image => image.fields.file.url);\n            let room={...item.fields,images,id};\n            return room;\n        });\n        return tempItems;\n    }\n    getRoom= (slug) =>{\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find((room)=>room.slug === slug);\n        return room;\n    };\n\n    handleChange = event => {\n        const target=event.target\n        const value=event.type === 'checkbox' ? \n        target.checked:target.value\n        const name=event.target.name;\n        this.setState({\n            [name]:value\n        },this.filterarooms)\n        \n    };\n    filterarooms= () => {\n        let{\n            rooms,type,capacity,price,airconditioner,\n            carpark,wifi,gym,pets,breakfast,kitchen\n        } =this.state;\n    \n//all the rooms\nlet temRooms=[...rooms];\n//transform values\ncapacity = parseInt(capacity)\nprice=parseInt(price)\n//filter by type\nif(type !== 'all'){\n    temRooms=temRooms.filter(room =>room.type ===type)\n}\n//filter by capacity\nif(capacity!==1){\n    temRooms=temRooms.filter(room=>room.capacity >=capacity)\n}\n\n//filter by price\ntemRooms=temRooms.filter(room=>room.price <=price);\n\n//filter by extras\nif(airconditioner){\n    temRooms=temRooms.filter(room=>room.airconditioner===true)\n}\nif(carpark){\n    temRooms=temRooms.filter(room=>room.carpark===true)\n}\nif(wifi){\n    temRooms=temRooms.filter(room=>room.wifi===true)\n}\nif(gym){\n    temRooms=temRooms.filter(room=>room.gym===true)\n}\nif(pets){\n    temRooms=temRooms.filter(room=>room.pets===true)\n}\nif(breakfast){\n    temRooms=temRooms.filter(room=>room.breakfast===true)\n}\nif(kitchen){\n    temRooms=temRooms.filter(room=>room.kitchen===true)\n}\n\n\n\n//change state\nthis.setState({\n    sortedRooms:temRooms\n})\n};\n    render() {\n        return (\n            \n            <RoomContext.Provider \n            value={{...this.state,getRoom:this.getRoom,\n            handleChange:this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n                \n            \n        );\n    }\n}\n\nconst RoomConsumer =RoomContext.Consumer;\n\nexport function withroomconsumer(Component){\n    return function Consumerwrapper(props){\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider,RoomConsumer,RoomContext};"]},"metadata":{},"sourceType":"module"}