{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaoyan/Desktop/orange/src/Coponent/Paypal.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nexport default class Paypal extends React.Component {\n  constructor(props) {\n    super(props); //console.log(this.props)\n\n    this.state = {\n      pay: []\n    };\n  }\n\n  handlebooking() {\n    let url = \"http://127.0.0.1:8081/v2/booking\";\n    const data = this.props.data;\n    data.price = this.props.total_price;\n    console.log(data);\n    fetch(url, {\n      method: 'post',\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/xml'\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      result.json().then(resp => {\n        console.log(resp);\n\n        if (resp === \"order succeed\") {\n          alert(\"order succeed\");\n          this.props.history.push(\"/orders\");\n        }\n\n        if (resp === \"Time error\") {\n          alert(\"room has been booked,please select another room\");\n        }\n      });\n    });\n  }\n\n  render() {\n    const onSuccess = payment => {\n      // Congratulation, it came here means everything's fine!\n      console.log(\"The payment was succeeded!\", payment); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log('The payment was cancelled!', data);\n      alert(\"please pay for your order\"); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = 'sandbox'; // you can set here to 'production' for production\n\n    let currency = 'AUD'; // or you can set this value from your props or state\n\n    var total = 0; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: 'AXgMDd8-93aSv_hA8PzBTLPUH-ICwU-dtKKCFplquI_xJxQnZZPa8O8c2Co2VFvzotDQuIVHixriBcQp',\n      production: 'YOUR-PRODUCTION-APP-ID'\n    }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n    return React.createElement(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccess,\n      onCancel: onCancel,\n      style: {\n        size: 'large',\n        color: 'blue',\n        shape: 'rect',\n        label: 'checkout'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/liuxiaoyan/Desktop/orange/src/Coponent/Paypal.js"],"names":["React","PaypalExpressBtn","Paypal","Component","constructor","props","state","pay","handlebooking","url","data","price","total_price","console","log","fetch","method","headers","body","JSON","stringify","then","result","json","resp","alert","history","push","render","onSuccess","payment","onCancel","onError","err","env","currency","total","client","sandbox","production","size","color","shape","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,GAAG,EAAC;AADG,KAAX;AAGH;;AACDC,EAAAA,aAAa,GAAE;AACX,QAAIC,GAAG,GAAC,kCAAR;AACA,UAAMC,IAAI,GAAC,KAAKL,KAAL,CAAWK,IAAtB;AACAA,IAAAA,IAAI,CAACC,KAAL,GAAW,KAAKN,KAAL,CAAWO,WAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAK,IAAAA,KAAK,CAACN,GAAD,EAAK;AACNO,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJ,kBAAS;AAFL,OAFF;AAMNC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AANA,KAAL,CAAL,CAOGW,IAPH,CAOSC,MAAD,IAAY;AAChBA,MAAAA,MAAM,CAACC,IAAP,GAAcF,IAAd,CAAoBG,IAAD,IAAQ;AACvBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,YAAGA,IAAI,KAAG,eAAV,EAA0B;AACtBC,UAAAA,KAAK,CAAC,eAAD,CAAL;AACA,eAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH;;AACD,YAAGH,IAAI,KAAG,YAAV,EAAuB;AACnBC,UAAAA,KAAK,CAAC,iDAAD,CAAL;AAEH;AACJ,OAVD;AAWH,KAnBD;AAoBH;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAIC,OAAD,IAAa;AAC3B;AACIjB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CgB,OAA1C,EAFuB,CAK1B;AACJ,KAND;;AAQA,UAAMC,QAAQ,GAAIrB,IAAD,IAAU;AACvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,IAA1C;AACAe,MAAAA,KAAK,CAAC,2BAAD,CAAL,CAHuB,CAIvB;AACH,KALD;;AAOA,UAAMO,OAAO,GAAIC,GAAD,IAAS;AACrB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBmB,GAAtB,EAFqB,CAGrB;AACA;AACH,KALD;;AAOA,QAAIC,GAAG,GAAG,SAAV,CAvBK,CAuBgB;;AACrB,QAAIC,QAAQ,GAAG,KAAf,CAxBK,CAwBiB;;AACtB,QAAIC,KAAK,GAAG,CAAZ,CAzBK,CAyBU;AACf;;AAEA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAK,kFADD;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAf,CA5BK,CAgCL;AACA;AACA;AACA;AACA;AAEA;;AACA,WACI,oBAAC,gBAAD;AACI,MAAA,GAAG,EAAEL,GADT;AAEI,MAAA,MAAM,EAAEG,MAFZ;AAGI,MAAA,QAAQ,EAAEF,QAHd;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,OAAO,EAAEJ,OALb;AAMI,MAAA,SAAS,EAAEH,SANf;AAOI,MAAA,QAAQ,EAAEE,QAPd;AAQI,MAAA,KAAK,EAAE;AACHS,QAAAA,IAAI,EAAC,OADF;AAEHC,QAAAA,KAAK,EAAC,MAFH;AAGHC,QAAAA,KAAK,EAAC,MAHH;AAIHC,QAAAA,KAAK,EAAC;AAJH,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiBH;;AA3F+C","sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class Paypal extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(this.props)\r\n        this.state={\r\n            pay:[]\r\n        }\r\n    }\r\n    handlebooking(){\r\n        let url=\"http://127.0.0.1:8081/v2/booking\";\r\n        const data=this.props.data\r\n        data.price=this.props.total_price\r\n        console.log(data)\r\n        \r\n        fetch(url,{\r\n            method: 'post',\r\n            headers:{\r\n                'content-type':'application/json',\r\n                'accept':'application/xml'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((result) => {\r\n            result.json().then((resp)=>{\r\n                console.log(resp)\r\n                if(resp===\"order succeed\"){\r\n                    alert(\"order succeed\")\r\n                    this.props.history.push(\"/orders\");\r\n                } \r\n                if(resp===\"Time error\"){\r\n                    alert(\"room has been booked,please select another room\")\r\n                    \r\n                } \r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n                console.log(\"The payment was succeeded!\", payment);\r\n                \r\n                \r\n            \t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            alert(\"please pay for your order\")\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'AUD'; // or you can set this value from your props or state\r\n        var total = 0; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n        \r\n        const client = {\r\n            sandbox:    'AXgMDd8-93aSv_hA8PzBTLPUH-ICwU-dtKKCFplquI_xJxQnZZPa8O8c2Co2VFvzotDQuIVHixriBcQp',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn \r\n                env={env} \r\n                client={client} \r\n                currency={currency} \r\n                total={total} \r\n                onError={onError} \r\n                onSuccess={onSuccess} \r\n                onCancel={onCancel}\r\n                style={{\r\n                    size:'large',\r\n                    color:'blue',\r\n                    shape:'rect',\r\n                    label:'checkout'\r\n                }}\r\n                    />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}