{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaoyan/Desktop/orange/src/Coponent/Paypal.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nexport default class Paypal extends React.Component {\n  constructor(props) {\n    super(props); //console.log(this.props)\n\n    this.state = {\n      pay: []\n    };\n  }\n\n  render() {\n    const onSuccess = payment => {\n      // Congratulation, it came here means everything's fine!\n      console.log(\"The payment was succeeded!\", payment);\n      this.setState({\n        pay: payment\n      });\n      this.props.handlepayment(); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log('The payment was cancelled!', data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = 'sandbox'; // you can set here to 'production' for production\n\n    let currency = 'AUD'; // or you can set this value from your props or state\n\n    var total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: 'AXgMDd8-93aSv_hA8PzBTLPUH-ICwU-dtKKCFplquI_xJxQnZZPa8O8c2Co2VFvzotDQuIVHixriBcQp',\n      production: 'YOUR-PRODUCTION-APP-ID'\n    }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n    return React.createElement(PaypalExpressBtn, {\n      env: env,\n      client: client,\n      currency: currency,\n      total: total,\n      onError: onError,\n      onSuccess: onSuccess,\n      onCancel: onCancel,\n      style: {\n        size: 'large',\n        color: 'blue',\n        shape: 'rect',\n        label: 'checkout'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/liuxiaoyan/Desktop/orange/src/Coponent/Paypal.js"],"names":["React","PaypalExpressBtn","Paypal","Component","constructor","props","state","pay","render","onSuccess","payment","console","log","setState","handlepayment","onCancel","data","onError","err","env","currency","total","client","sandbox","production","size","color","shape","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,eAAe,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,GAAG,EAAC;AADG,KAAX;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAIC,OAAD,IAAa;AAC3B;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,OAA1C;AACA,WAAKG,QAAL,CAAc;AACVN,QAAAA,GAAG,EAACG;AADM,OAAd;AAGA,WAAKL,KAAL,CAAWS,aAAX,GANuB,CAO1B;AACJ,KARD;;AAUA,UAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,IAA1C,EAFuB,CAGvB;AACH,KAJD;;AAMA,UAAMC,OAAO,GAAIC,GAAD,IAAS;AACrB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,GAAtB,EAFqB,CAGrB;AACA;AACH,KALD;;AAOA,QAAIC,GAAG,GAAG,SAAV,CAxBK,CAwBgB;;AACrB,QAAIC,QAAQ,GAAG,KAAf,CAzBK,CAyBiB;;AACtB,QAAIC,KAAK,GAAG,CAAZ,CA1BK,CA0BU;AACf;;AAEA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAK,kFADD;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAf,CA7BK,CAiCL;AACA;AACA;AACA;AACA;AAEA;;AACA,WACI,oBAAC,gBAAD;AACI,MAAA,GAAG,EAAEL,GADT;AAEI,MAAA,MAAM,EAAEG,MAFZ;AAGI,MAAA,QAAQ,EAAEF,QAHd;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,OAAO,EAAEJ,OALb;AAMI,MAAA,SAAS,EAAER,SANf;AAOI,MAAA,QAAQ,EAAEM,QAPd;AAQI,MAAA,KAAK,EAAE;AACHU,QAAAA,IAAI,EAAC,OADF;AAEHC,QAAAA,KAAK,EAAC,MAFH;AAGHC,QAAAA,KAAK,EAAC,MAHH;AAIHC,QAAAA,KAAK,EAAC;AAJH,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiBH;;AAjE+C","sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class Paypal extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        //console.log(this.props)\r\n        this.state={\r\n            pay:[]\r\n        }\r\n    }\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n                console.log(\"The payment was succeeded!\", payment);\r\n                this.setState({\r\n                    pay:payment\r\n                })\r\n                this.props.handlepayment();    \r\n            \t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'AUD'; // or you can set this value from your props or state\r\n        var total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n        \r\n        const client = {\r\n            sandbox:    'AXgMDd8-93aSv_hA8PzBTLPUH-ICwU-dtKKCFplquI_xJxQnZZPa8O8c2Co2VFvzotDQuIVHixriBcQp',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn \r\n                env={env} \r\n                client={client} \r\n                currency={currency} \r\n                total={total} \r\n                onError={onError} \r\n                onSuccess={onSuccess} \r\n                onCancel={onCancel}\r\n                style={{\r\n                    size:'large',\r\n                    color:'blue',\r\n                    shape:'rect',\r\n                    label:'checkout'\r\n                }}\r\n                    />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}