{"ast":null,"code":"var _jsxFileName = \"/Users/liuxiaoyan/Desktop/orange/src/Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\n\nclass RoomProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterarooms);\n    };\n\n    this.filterarooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        airconditioner,\n        carpark,\n        wifi,\n        gym,\n        pets,\n        breakfast,\n        kitchen\n      } = this.state; //all the rooms\n\n      let temRooms = [...rooms]; //transform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== 'all') {\n        temRooms = temRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        temRooms = temRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      temRooms = temRooms.filter(room => room.price <= price); //filter by extras\n\n      if (airconditioner) {\n        temRooms = temRooms.filter(room => room.airconditioner === true);\n      }\n\n      if (carpark) {\n        temRooms = temRooms.filter(room => room.carpark === true);\n      }\n\n      if (wifi) {\n        temRooms = temRooms.filter(room => room.wifi === true);\n      }\n\n      if (gym) {\n        temRooms = temRooms.filter(room => room.gym === true);\n      }\n\n      if (pets) {\n        temRooms = temRooms.filter(room => room.pets === true);\n      }\n\n      if (breakfast) {\n        temRooms = temRooms.filter(room => room.breakfast === true);\n      }\n\n      if (kitchen) {\n        temRooms = temRooms.filter(room => room.kitchen === true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: temRooms\n      });\n    };\n\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      slug: '',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      airconditioner: false,\n      carpark: false,\n      wifi: false,\n      gym: false,\n      pets: false,\n      breakfast: false,\n      kitchen: false\n    };\n  } //getdata\n\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.rid;\n      let slug = item.type;\n      let room = { ...item,\n        id,\n        slug\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withroomconsumer(Component) {\n  return function Consumerwrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/liuxiaoyan/Desktop/orange/src/Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","constructor","props","getRoom","slug","tempRooms","state","rooms","room","find","handleChange","event","target","value","type","checked","name","setState","filterarooms","capacity","price","airconditioner","carpark","wifi","gym","pets","breakfast","kitchen","temRooms","parseInt","filter","sortedRooms","featuredRooms","loading","minPrice","maxPrice","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","rid","render","children","RoomConsumer","Consumer","withroomconsumer","Consumerwrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n\n\n\n\nconst RoomContext =React.createContext();\nclass RoomProvider extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            rooms:[],\n            sortedRooms:[],\n            featuredRooms:[],\n            loading: true,\n            type:'all',\n            slug:'',\n            capacity:1,\n            price:0,\n            minPrice:0,\n            maxPrice:0,\n            airconditioner:false,\n            carpark:false,\n            wifi:false,\n            gym:false,\n            pets:false,\n            breakfast:false,\n            kitchen:false\n        }\n        \n    }\n    //getdata\n    componentDidMount() {\n        let rooms =this.formatData(items);\n        let featuredRooms=rooms.filter(room => room.featured === true);\n        let maxPrice=Math.max(...rooms.map(item=>item.price));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms:rooms,\n            loading:false,\n            price:maxPrice,\n            maxPrice\n        });\n        \n    }\n    formatData(items){\n        let tempItems = items.map(item =>{\n            let id = item.rid;\n            let slug=item.type;\n            let room={...item,id,slug};\n            return room;\n        });\n        return tempItems;\n    }\n    getRoom= (slug) =>{\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find((room)=>room.slug === slug);\n        return room;\n    };\n\n    handleChange = event => {\n        const target=event.target\n        const value=event.type === 'checkbox' ? \n        target.checked:target.value\n        const name=event.target.name;\n        this.setState({\n            [name]:value\n        },this.filterarooms)\n        \n    };\n    filterarooms= () => {\n        let{\n            rooms,type,capacity,price,airconditioner,\n            carpark,wifi,gym,pets,breakfast,kitchen\n        } =this.state;\n    \n    //all the rooms\n    let temRooms=[...rooms];\n    //transform values\n    capacity = parseInt(capacity)\n    price=parseInt(price)\n    //filter by type\n    if(type !== 'all'){\n        temRooms=temRooms.filter(room =>room.type ===type)\n    }\n    //filter by capacity\n    if(capacity!==1){\n        temRooms=temRooms.filter(room=>room.capacity >=capacity)\n    }\n\n    //filter by price\n    temRooms=temRooms.filter(room=>room.price <=price);\n\n    //filter by extras\n    if(airconditioner){\n        temRooms=temRooms.filter(room=>room.airconditioner===true)\n    }\n    if(carpark){\n        temRooms=temRooms.filter(room=>room.carpark===true)\n    }\n    if(wifi){\n        temRooms=temRooms.filter(room=>room.wifi===true)\n    }\n    if(gym){\n        temRooms=temRooms.filter(room=>room.gym===true)\n    }\n    if(pets){\n        temRooms=temRooms.filter(room=>room.pets===true)\n    }\n    if(breakfast){\n        temRooms=temRooms.filter(room=>room.breakfast===true)\n    }\n    if(kitchen){\n        temRooms=temRooms.filter(room=>room.kitchen===true)\n    }\n\n\n\n    //change state\n    this.setState({\n        sortedRooms:temRooms\n    })\n    };\n    render() {\n        return (\n            <RoomContext.Provider \n            value={{...this.state,getRoom:this.getRoom,\n            handleChange:this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n            \n\n        );\n    }\n}\n\nconst RoomConsumer =RoomContext.Consumer;\n\nexport function withroomconsumer(Component){\n    return function Consumerwrapper(props){\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider,RoomConsumer,RoomContext};"]},"metadata":{},"sourceType":"module"}